/**
 * @fileoverview Firestore Security Rules for the auto accessories shop application.
 *
 * Core Philosophy:
 * This ruleset prioritizes secure access to product and transaction data.
 * All authenticated users (anonymous included) have read access to product and transaction data.
 * All write access is denied in this prototype phase to limit data mutations.
 *
 * Data Structure:
 * - /products/{productId}: Stores product information.
 * - /transactions/{transactionId}: Stores transaction history.
 *
 * Key Security Decisions:
 * - Read access is granted to all authenticated users (including anonymous).
 * - Write access is denied to all users. This restriction is intended to be temporary.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any authenticated user to read product data.
     * @path /products/{productId}
     * @allow (get, list) - Any authenticated user can read product data.
     * @deny (create, update, delete) - No one can create, update, or delete product data.
     * @principle Public read, owner-only writes (currently disabled, write access denied).
     */
    match /products/{productId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows any authenticated user to read transaction data.
     * @path /transactions/{transactionId}
     * @allow (get, list) - Any authenticated user can read transaction data.
     * @deny (create, update, delete) - No one can create, update, or delete transaction data.
     * @principle Public read, owner-only writes (currently disabled, write access denied).
     */
    match /transactions/{transactionId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    // ---- Helper functions ----

    /**
     * @description Checks if the user is signed in (any authentication).
     * @return {bool} True if the user is signed in, false otherwise.
     */
    function isSignedIn() {
      return request.auth != null;
    }
  }
}